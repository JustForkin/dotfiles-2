snippet import
alias i
abbr import {module}
prev_word '^'
	import ${1:module}

snippet from
alias f
abbr from {module} import {target}
prev_word '^'
	from ${1:module} import ${2:target}

snippet for
abbr for {v} in {iter}:
prev_word '^'
	for ${1:v} in ${2:iter}:
		${3:pass}

snippet if
abbr if {cond}:
prev_word '^'
	if ${1:cond}:
		${2:pass}

snippet while
abbr while {cond}
prev_word '^'
	while ${1:cond}:
		${2:pass}

snippet def
prev_word '^'
	def ${1:funcname}(${2}):
		${3:raise NotImplementedError}

snippet class
prev_word '^'
	class ${1:ClassName}(${2:object}):
		pass

snippet new
prev_word '^'
	def __new__(cls, ${1}*args, **kwargs):
		${2:raise NotImplementedError}

snippet init
prev_word '^'
	def __init__(self${1}):
		${2:raise NotImplementedError}

snippet del
abbr __del__
prev_word '^'
	def __del__(self):
		${1:raise NotImplementedError}

snippet repr
abbr __repr__
prev_word '^'
	def __repr__(self):
		${1:raise NotImplementedError}

snippet str
abbr __str__
prev_word '^'
	def __str__(self):
		${1:raise NotImplementedError}

snippet lt
abbr __lt__
prev_word '^'
	def __lt__(self, other):
		${1:raise NotImplementedError}

snippet le
abbr __le__
prev_word '^'
	def __le__(self, other):
		${1:raise NotImplementedError}

snippet eq
abbr __eq__
prev_word '^'
	def __eq__(self, other):
		${1:raise NotImplementedError}

snippet ne
abbr __ne__
prev_word '^'
	def __ne__(self, other):
		${1:raise NotImplementedError}

snippet gt
abbr __gt__
prev_word '^'
	def __gt__(self, other):
		${1:raise NotImplementedError}

snippet ge
abbr __ge__
prev_word '^'
	def __ge__(self, other):
		${1:raise NotImplementedError}

snippet cmp
abbr __cmp__
prev_word '^'
	def __cmp__(self, other):
		${1:raise NotImplementedError}

snippet hash
abbr __hash__
prev_word '^'
	def __hash__(self):
		${1:raise NotImplementedError}

snippet nonzero
abbr __nonzero__
prev_word '^'
	def __nonzero__(self):
		${1:raise NotImplementedError}

snippet unicode
abbr __unicode__
prev_word '^'
	def __unicode__(self):
		${1:raise NotImplementedError}

snippet getattribute
alias getattr
abbr __getattribute__
prev_word '^'
	def __getattribute__(self, name):
		${1:raise NotImplementedError}

snippet setattr
abbr __setattr__
prev_word '^'
	def __setattr__(self, name, value):
		${1:raise NotImplementedError}

snippet delattr
abbr __delattr__
prev_word '^'
	def __delattr__(self, name):
		${1:raise NotImplementedError}

snippet get
abbr __get__
prev_word '^'
	def __get__(self, instance, owner=None):
		${1:raise NotImplementedError}

snippet set
abbr __set__
prev_word '^'
	def __set__(self, instance, value):
		${1:raise NotImplementedError}

snippet delete
abbr __delete__
prev_word '^'
	def __delete__(self, instance):
		${1:raise NotImplementedError}

snippet slots
abbr __slots__
prev_word '^'
	__slots__ = [${1}]

snippet metaclass
abbr __metaclass__
prev_word '^'
	__metaclass__ = ${1}

snippet call
abbr __call__
prev_word '^'
	def __call__(self${1}):
		${1:raise NotImplementedError}

snippet len
abbr __len__
prev_word '^'
	def __len__(self):
		${1:raise NotImplementedError}

snippet getitem
abbr __getitem__
prev_word '^'
	def __getitem__(self, key):
		${1:raise NotImplementedError}

snippet setitem
abbr __setitem__
prev_word '^'
	def __setitem__(self, key, value):
		${1:raise NotImplementedError}

snippet delitem
abbr __delitem__
prev_word '^'
	def __delitem__(self, key):
		${1:raise NotImplementedError}

snippet iter
abbr __iter__
prev_word '^'
	def __iter__(self):
		${1:raise NotImplementedError}

snippet contains
abbr __contains__
prev_word '^'
	def __contains__(self, item):
		${1:raise NotImplementedError}

snippet add
abbr __add__
prev_word '^'
	def __add__(self, other):
		${1:raise NotImplementedError}

snippet sub
abbr __sub__
prev_word '^'
	def __sub__(self, other):
		${1:raise NotImplementedError}

snippet mul
abbr __mul__
prev_word '^'
	def __mul__(self, other):
		${1:raise NotImplementedError}

snippet floordiv
abbr __floordiv__
prev_word '^'
	def __floordiv__(self, other):
		${1:raise NotImplementedError}

snippet mod
abbr __mod__
prev_word '^'
	def __mod__(self, other):
		${1:raise NotImplementedError}

snippet divmod
abbr __divmod__
prev_word '^'
	def __divmod__(self, other):
		${1:raise NotImplementedError}

snippet pow
abbr __pow__
prev_word '^'
	def __pow__(self, other${1:, modulo}):
		${2:raise NotImplementedError}

snippet lshift
abbr __lshift__
prev_word '^'
	def __lshift__(self, other):
		${1:raise NotImplementedError}

snippet rshift
abbr __rshift__
prev_word '^'
	def __rshift__(self, other):
		${1:raise NotImplementedError}

snippet and
abbr __and__
prev_word '^'
	def __and__(self, other):
		${1:raise NotImplementedError}

snippet xor
abbr __xor__
prev_word '^'
	def __xor__(self, other):
		${1:raise NotImplementedError}

snippet or
abbr __or__
prev_word '^'
	def __or__(self, other):
		${1:raise NotImplementedError}

snippet div
abbr __div__
prev_word '^'
	def __div__(self, other):
		${1:raise NotImplementedError}

snippet truediv
abbr __truediv__
prev_word '^'
	def __truediv__(self, other):
		${1:raise NotImplementedError}

snippet radd
abbr __radd__
prev_word '^'
	def __radd__(self, other):
		${1:raise NotImplementedError}

snippet rsub
abbr __rsub__
prev_word '^'
	def __rsub__(self, other):
		${1:raise NotImplementedError}

snippet rmul
abbr __rmul__
prev_word '^'
	def __rmul__(self, other):
		${1:raise NotImplementedError}

snippet rdiv
abbr __rdiv__
prev_word '^'
	def __rdiv__(self, other):
		${1:raise NotImplementedError}

snippet rtruediv
abbr __rtruediv__
prev_word '^'
	def __rtruediv__(self, other):
		${1:raise NotImplementedError}

snippet rfloordiv
abbr __rfloordiv__
prev_word '^'
	def __rfloordiv__(self, other):
		${1:raise NotImplementedError}

snippet rmod
abbr __rmod__
prev_word '^'
	def __rmod__(self, other):
		${1:raise NotImplementedError}

snippet rdivmod
abbr __rdivmod__
prev_word '^'
	def __rdivmod__(self, other):
		${1:raise NotImplementedError}

snippet rpow
abbr __rpow__
prev_word '^'
	def __rpow__(self, other):
		${1:raise NotImplementedError}

snippet rlshift
abbr __rlshift__
prev_word '^'
	def __rlshift__(self, other):
		${1:raise NotImplementedError}

snippet rrshift
abbr __rrshift__
prev_word '^'
	def __rrshift__(self, other):
		${1:raise NotImplementedError}

snippet rand
abbr __rand__
prev_word '^'
	def __rand__(self, other):
		${1:raise NotImplementedError}

snippet rxor
abbr __rxor__
prev_word '^'
	def __rxor__(self, other):
		${1:raise NotImplementedError}

snippet ror
abbr __ror__
prev_word '^'
	def __ror__(self, other):
		${1:raise NotImplementedError}

snippet iadd
abbr __iadd__
prev_word '^'
	def __iadd__(self, other):
		${1:raise NotImplementedError}

snippet isub
abbr __isub__
prev_word '^'
	def __isub__(self, other):
		${1:raise NotImplementedError}

snippet imul
abbr __imul__
prev_word '^'
	def __imul__(self, other):
		${1:raise NotImplementedError}

snippet idiv
abbr __idiv__
prev_word '^'
	def __idiv__(self, other):
		${1:raise NotImplementedError}

snippet itruediv
abbr __itruediv__
prev_word '^'
	def __itruediv__(self, other):
		${1:raise NotImplementedError}

snippet ifloordiv
abbr __ifloordiv__
prev_word '^'
	def __ifloordiv__(self, other):
		${1:raise NotImplementedError}

snippet imod
abbr __imod__
prev_word '^'
	def __imod__(self, other):
		${1:raise NotImplementedError}

snippet ipow
abbr __ipow__
prev_word '^'
	def __ipow__(self, other${1:, modulo}):
		${2:raise NotImplementedError}

snippet ilshift
abbr __ilshift__
prev_word '^'
	def __ilshift__(self, other):
		${1:raise NotImplementedError}

snippet irshift
abbr __irshift__
prev_word '^'
	def __irshift__(self, other):
		${1:raise NotImplementedError}

snippet iand
abbr __iand__
prev_word '^'
	def __iand__(self, other):
		${1:raise NotImplementedError}

snippet ixor
abbr __ixor__
prev_word '^'
	def __ixor__(self, other):
		${1:raise NotImplementedError}

snippet ior
abbr __ior__
prev_word '^'
	def __ior__(self, other):
		${1:raise NotImplementedError}

snippet neg
abbr __neg__
prev_word '^'
	def __neg__(self):
		${1:raise NotImplementedError}

snippet pos
abbr __pos__
prev_word '^'
	def __pos__(self):
		${1:raise NotImplementedError}

snippet abs
abbr __abs__
prev_word '^'
	def __abs__(self):
		${1:raise NotImplementedError}

snippet invert
abbr __invert__
prev_word '^'
	def __invert__(self):
		${1:raise NotImplementedError}

snippet complex
abbr __complex__
prev_word '^'
	def __complex__(self):
		${1:raise NotImplementedError}

snippet int
abbr __int__
prev_word '^'
	def __int__(self):
		${1:raise NotImplementedError}

snippet long
abbr __long__
prev_word '^'
	def __long__(self):
		${1:raise NotImplementedError}

snippet float
abbr __float__
prev_word '^'
	def __float__(self):
		${1:raise NotImplementedError}

snippet oct
abbr __oct__
prev_word '^'
	def __oct__(self):
		${1:raise NotImplementedError}

snippet hex
abbr __hex__
prev_word '^'
	def __hex__(self):
		${1:raise NotImplementedError}

snippet index
abbr __index__
prev_word '^'
	def__index__(self):
		${1:raise NotImplementedError}

snippet coerce
abbr __coerce__
prev_word '^'
	def __coerce__(self, other):
		${1:raise NotImplementedError}

snippet enter
abbr __enter__
prev_word '^'
	def __enter__(self):
		${1:raise NotImplementedError}

snippet exit
abbr __exit__
prev_word '^'
	def __exit__(self, exc_type, exc_value, traceback):
		${1:raise NotImplementedError}
