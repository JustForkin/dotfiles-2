snippet class
options head
	${1:public} class ${2:ClassName} {
		public $2() {
			${0:// not implemented yet.}
		}
	}

snippet function
alias fun
options head
	${1:public} function ${2:funcname}(${3}):${4:void} {
		${0:// not implemented yet.}
	}

snippet var
alias v
options head
	var ${1:varname}:${2:int}${0: = $\{3:value\}};

snippet public
alias pub
options head
	public 

snippet protedted
alias prot
options head
	protected 

snippet private
alias pr
options head
	private 

snippet if
options head
	if (${1:condition}) {
		${0:// not implemented yet.}
	}

snippet while
options head
	while (${1:condition}) {
		${0:// not implemented yet.}
	}

snippet for
options head
	for (${1:var i:int = 0}; ${2:condition}; ${3:i++}) {
		${0:// not implemented yet.}
	}

snippet do
abbr do-while
options head
	do {
		${0:// not implemented yet.}
	} while (${1:condition});

snippet switch
alias sw
options head
	switch (${1:condition}) {
		case ${2:pattern}:
			${0:// not implemented yet.}
			break;
		default:
			break;
	}

snippet case
abbr switch-case
options head
	case ${1:pattern}:
		${0:// not implemented yet.}
		break;

snippet getter
abbr funciton get ...
options head
	${1:public} function get ${2:funcname}():${3:int} {
		${0:// not implemented yet.}
	}

snippet setter
abbr funciton set ...
options head
	${1:public} function set ${2:funcname}(${3:value}):${4:void} {
		${0:// not implemented yet.}
	}

snippet co
abbr const
options head
	${1:public} static const ${2:varname}:${3:int} = ${0};

snippet cos
abbr const String
options head
	${1:public} static const ${2:varname}:String = "${0}";

snippet import
alias i
options head
	import ${0:package};

snippet trace
alias tr
abbr trace(...)
options head
	trace(${1:args});

snippet over
alias ov
abbr override
options head
	override 

snippet ex
abbr ExternalInterface.call
options head
	ExternalInterface.call('console.log', '${0}');
